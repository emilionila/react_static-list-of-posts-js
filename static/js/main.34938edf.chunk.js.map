{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"+08IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,QCJGC,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBF,EAAsBE,EAAtBF,KAAMD,EAAgBG,EAAhBH,MAAOI,EAASD,EAATC,KAErB,OACE,sBAAKN,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGG,IAGF,OAED,mBACEH,UAAU,qBACVC,KAAI,iBAAYC,GAFlB,SAIGA,OAIL,qBAAKF,UAAU,oBAAf,SACGM,SClBIC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKR,UAAU,cAAf,SACGQ,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQK,WCFrCC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBb,EAIEa,EAJFb,KACAS,EAGEI,EAHFJ,SACAK,EAEED,EAFFC,MACAP,EACEM,EADFN,KAGF,OACE,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,IAEhCd,GACC,8BACG,eACD,cAAC,EAAD,CAAUA,KAAMA,UAKtB,mBAAGC,UAAU,iBAAb,SACGM,IAGH,uBAECE,EAASM,OAAS,EACf,cAAC,EAAD,CAAaN,SAAUA,IACvB,mBAAG,UAAQ,oBAAX,iCC9BGO,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,W,qBCMtC,IAIaM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cb,MAXmBmB,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MAC3C,MAULV,UAP0Ba,EAOIT,EAAKF,GANnCY,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,QAD9B,IAAAA,EALPH,KAeRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.34938edf.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    user,\n    comments,\n    title,\n    body,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        {user && (\n          <p>\n            {' Posted by  '}\n            <UserInfo user={user} />\n          </p>\n        )}\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      {comments.length > 0\n        ? <CommentList comments={comments} />\n        : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nconst getCommentsByPostId = postId => (\n  commentsFromServer.filter(comment => comment.postId === postId)\n);\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}